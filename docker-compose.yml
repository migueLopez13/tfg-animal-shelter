version: '3.8'

services:
    postgresql:
      image: postgres:latest
      container_name: ${PROJECT_NAME}_POSTGRES
      restart: unless-stopped
      volumes: 
        - postgres:/var/lib/postgresql/data
      ports:
        - ${POSTGRES_PORT}:${POSTGRES_PORT}
      environment:
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_DB: ${POSTGRES_DB}
      env_file:
        - .env
    
    mysql:
      image: mysql
      restart: unless-stopped
      container_name: ${PROJECT_NAME}_MYSQL
      environment:
        MYSQL_DATABASE: ${MYSQL_DB}
        MYSQL_USER: ${MYSQL_USER}
        MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      ports:
        - ${MYSQL_PORT}:${MYSQL_PORT}
      volumes:
        - mysql:/var/lib/mysql
        - ./db/init.sql:/data/application/init.sql
      env_file:
          - .env  

    phppgadmin:
      image: docker.io/bitnami/phppgadmin:7
      container_name: ${PROJECT_NAME}_PHPPGADMIN
      environment:
        - DATABASE_HOST=postgresql
      ports:
        - ${ADMIN_PORT}:${ADMIN_PORT}
      depends_on:
        - postgresql

    back:
      container_name: ${PROJECT_NAME}_NESTJS
      restart: unless-stopped
      build:
        context: ./
        dockerfile: Dockerfile-back
      working_dir: /backend
      ports:
        - ${BACK_PORT}:${BACK_PORT}
      env_file:
            - .env
      volumes:
          - node_modules_nestjs:/backend/node_modules
          - ./animal-shelter-back/animal-shelter:/backend
      depends_on:
        - postgresql
      links:
        - postgresql

    back-address:
      container_name: ${PROJECT_NAME}_NESTJS_ADDRESS
      restart: unless-stopped
      build:
        context: ./
        dockerfile: Dockerfile-address
      working_dir: /backend
      ports:
        - ${ADDRESS_PORT}:${ADDRESS_PORT}
      env_file:
            - .env
      volumes:
          - node_modules_address:/backend/node_modules
          - ./animal-shelter-back/address:/backend
      depends_on:
        - mysql
      links:
        - mysql

    front:
      container_name: ${PROJECT_NAME}_ANGULAR
      restart: unless-stopped
      build:
        context: ./
        dockerfile: Dockerfile-front
      working_dir: /frontend
      ports:
        - ${ANGULAR_PORT}:4200
      env_file:
            - .env
      volumes:
          - node_modules_angular:/frontend/node_modules
          - ./animal-shelter-front:/frontend

volumes:
  node_modules_nestjs:
  node_modules_address:
  node_modules_angular:
  postgres:
  mysql:
